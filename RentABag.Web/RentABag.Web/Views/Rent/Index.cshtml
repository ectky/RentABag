@model IEnumerable<BagViewModel>
@{
    ViewData["Title"] = "Index";
    var pages = ViewData["Pages"] as int?;
    var currentPage = ViewData["CurrentPage"] as int?;
    var previousDisabled = currentPage != 1 ? "" : "disabled";
    var nextDisabled = currentPage != pages ? "" : "disabled";
    var categories = ViewData["Categories"] as IEnumerable<CategoryViewModel>;
    var designers = ViewData["Designers"] as IEnumerable<DesignerViewModel>;
}

<div class="container contact_container">
    <div class="row">
        <div class="col">

            <!-- Breadcrumbs -->

            <div class="breadcrumbs d-flex flex-row align-items-center">
                <ul>
                    <li><a asp-area="" asp-controller="Rent" asp-action="Index">Rent</a></li>
                </ul>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-3">
            <p>Categories</p>
            <ul class="list-group list-group-flush">
                @foreach (var category in categories)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @category.Name
                        <span class="badge badge-primary badge-pill">@category.Bags.Count</span>
                    </li>
                }
            </ul>
            <br />
            <p>Designers</p>
            <ul class="list-group list-group-flush">
                @foreach (var designer in designers)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @designer.Name
                        <span class="badge badge-primary badge-pill">@designer.Bags.Count</span>
                    </li>
                }
            </ul>
        </div>
        <div class="col-9">
            <h3>Rent the perfect Bag</h3>
            <div class="product-grid" data-isotope='{ "layoutMode": "fitCols" }'>
                @foreach (var bag in Model)
                {
                    await Html.RenderPartialAsync("BagViewModelDisplayTemplate", bag);
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    @for (int i = 1; i <= pages; i++)
                    {
                        <li class="page-item">
                            <a @previousDisabled class="page-link" asp-area="" asp-controller="Rent" asp-action="Index" asp-route-id="@(i - 1)" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                                <span class="sr-only">Previous</span>
                            </a>
                        </li>
                        <li class="page-item"><a class="page-link" asp-area="" asp-controller="Rent" asp-action="Index" asp-route-id="@i">@i</a></li>
                        <li class="page-item" @nextDisabled>
                            <a @nextDisabled class="page-link" asp-area="" asp-controller="Rent" asp-action="Index" asp-route-id="@(i+1)" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                                <span class="sr-only">Next</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>
</div>